<?xml version="1.0" encoding="UTF-8"?>
<!-- 이 문서는 mybatis에서 처리할 SQL문을 처리하는 문서입니다... -->
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0/EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<!-- <mapper>태그의 namespace속성은 Java소스에서 실행할 SQL문을 호출할 때 같이 사용되는 이름이다. -->
<mapper namespace="restaurant">
	
	<!-- 테이블 타입 인서트 -->
	<insert id="insertTableType" parameterType="String">
		insert into TABLETYPE(TT_ID,RST_ID)
		values(1,#{data})
	</insert>
	
	<!-- 태그 업데이트 2 -->
	<insert id="insertRstTagList" parameterType="rsttagVo">
		insert into RSTTAG
		values(#{tag_id},#{rst_id})
	</insert>
	
	<!-- 태그 업데이트 1 -->
	<delete id="deleteRstTag" parameterType="String">
		delete from RSTTAG
		where RST_ID = #{data}
	</delete>
	
	<!-- 문의리스트 불러오기 -->
      <select id="rstQuestion" parameterType="String" resultType="iqrVo">
         select a.iqr_id,
            a.iqr_title,
            a.iqr_content,
            a.iqr_date,
            a.iqr_as,
            b.mem_nick as mem_id,
            a.rst_id 
            from iqr a, members b 
                where a.rst_id = #{data}
                and a.mem_id = b.mem_id
            order by 4 desc
      </select>
	
	   <!-- 문의에 답변하는 내용 -->
   
   <insert id="insertAnswer" parameterType="answerVo">
         insert into Answer values(seq_answer.nextval,#{rst_id},#{iqr_id},#{a_content},#{q_content},#{iqr_writer})
   
   </insert>
	
	<!-- 메뉴 삭제 -->
    <delete id="deleteMenu" parameterType="menuVo">
    	delete from MENU
    	where MENU_ID = #{menu_id}
    	and RST_ID = #{rst_id}
    </delete>
	
	
	<!-- 메뉴 수정 -->
    <update id="updateMenu" parameterType="menuVo">
    	update MENU
    	<set>
 			MENU_NAME = #{menu_name},
			MENU_PRICE = #{menu_price},
			MENU_DS = #{menu_ds},
			<if test="menu_photo != null">menu_photo = #{menu_photo}</if>
    	</set>
    	where MENU_ID = #{menu_id}
    	and RST_ID = #{rst_id}
    </update>
	
	
	<!-- 메뉴 상세 정보 보여주기 -->
	<select id="getMenuDetail" parameterType="menuVo" resultType="menuVo">
		select *
		from menu
		where MENU_ID = #{menu_id}
		and RST_ID = #{rst_id}
	</select>
	
	
	 <!-- 메뉴 등록 이거 해야됨-->
    <insert id="addMenu" parameterType="menuVo">
    	insert into menu values(
    		seq_menu_id.nextval,
            #{rst_id},
            #{menu_name},
            #{menu_price},
            #{menu_ds},
            #{menu_photo})
    </insert> 

	<!-- 메뉴 전체 조회 -->
    <select id="showMenu" parameterType="String" resultType="menuVo">
    	select * 
    	from MENU
    	where RST_ID = #{data}
    </select>


	<!--예약 삭제-->  
	<delete id="rsCancel" parameterType="String">
		delete 
		from reservation 
		where rs_id = #{rs_id}
	</delete>
	

	<!-- 예약 상세 정보 보기 -->
	<select id="getReservDetail" parameterType="String" resultType="reservDetailVo">
		select 
		    A.rs_id as rs_id,
		    B.mem_name as mem_name,
		    A.rs_datetime as rs_datetime,
		    A.rs_people as rs_people,
		    B.mem_tel as rst_tel,
		    D.menu_name as rst_addr,
		    C.rm_qty as rm_qty
		from RESERVATION A, 
		        MEMBERS B,
		        RSMENU C,
		        MENU D
		where A.mem_id = B.mem_id
		and A.rs_id = C.rs_id
		and D.menu_id = C.menu_id
		and c.rs_id = #{data}
        and d.rst_id = ( select rst_id
                            from reservation
                        where rs_id = #{data})
	</select>
	
	<!-- 내 가게 예약 정보-->
	<select id="getReservation" parameterType="String" resultType="reservationVo">
		select * from RESERVATION
		where RST_ID = #{data}
	</select>
	
	  <!-- 사업자 정보조회 -->
   <select id="selectRst" parameterType="String" resultType="restaurantVo">
     select a.rst_id,
        A.rst_pass as rst_pass,
        A.RST_NAME as rst_name,
        A.RST_INFO as rst_info,
        A.BS_NUM as bs_num,
        A.CLOSEDDAY as closedday,
        A.OPNETME as opnetme,
        A.CLOSETIME as closetime,
        A.RST_ADDR as rst_addr,
        A.RST_MAIL as rst_mail,
        A.RST_TEL as rst_tel, 
        A.RST_PHOTO as rst_photo,
        B.CTG_NAME AS CTG_ID 
        from RESTAURANT A, CATEGORY B 
        where b.ctg_id = A.CTG_ID 
        and rst_id = #{rst_id}
   </select>
   
    <!-- 사업자별 리뷰리스트 가져오기 -->
   
   <select id="reviewAll" parameterType="reviewVo" resultType="reviewVo">
    select A.*
            from(select rownum as rnum , B.* 
             from(select d.*, c.mem_nick, e.rst_id
                     from review d, reservation e, members c
                     where e.rs_id = d.rs_id and
                           c.mem_id = d.mem_id and
                           rst_id = #{rst_id}
                    order by rv_date desc) B 
         <![CDATA[
         where rownum <= 8+(8*#{more})) A
           where A.rnum >= 1+(8*#{more})
            ]]>  
   </select>

   
   <!-- 사업자 태그 조회하기-->
   <select id="selectTag" parameterType="String" resultType="tagVo">
   	   select b.TAG_NAME from rsttag A, tag b where a.RST_ID = #{data} and b.tag_id = A.TAG_ID
   </select>
   
   <!-- 사업자 정보업데이트-->
   <select id="updateRst" parameterType="restaurantVo" >
      update  RESTAURANT set 
        RST_ADDR = #{rst_addr},
		RST_TEL = #{rst_tel},
		RST_INFO = #{rst_info},
		RST_PASS = #{rst_pass},
		RST_MAIL = #{rst_mail},
		CLOSEDDAY = #{closedday},
		OPNETME = #{opnetme},
		CLOSETIME = #{closetime},
		RST_PHOTO = #{rst_photo},
		RST_NAME = #{rst_name},
		CTG_ID = #{ctg_id}
	  where  	rst_id = #{rst_id}
   </select>
   <!-- 사업자 리뷰관리에서 사업주가 댓글등록 -->
  <insert id="insertRstCmt" parameterType="rstcmtVo">
  		insert into rstcmt 
  		values(seq_rcmt.nextval,
  				#{rcmt_content},
  				#{rst_id},
  				#{rv_id},
  				sysdate)
   </insert>
   
   
   <!-- 사업자 리뷰관리에서 해당 리뷰에 달린 사업자 댓글 보기 -->
   <select id="showReply" parameterType="int" resultType="rstcmtVo">
 	 select *
 	 from rstcmt 
 	 where rv_id = #{data}
   </select>
   
   <!-- 사업자 리뷰관리에서 해당 리뷰에 달린 댓글 삭제 -->
   	<delete id="deleteCmt" parameterType="int">
   		delete from rstcmt
   		where RCMT_ID = #{data}
   	</delete>
   	
   <!-- 사업자 리뷰관리에서 해당 리뷰에 달린 댓글수정 -->
   	<delete id="modifyCmt" parameterType="rstcmtVo">
   		update rstcmt
   		set rcmt_content = #{rcmt_content}
   		where rcmt_id = #{rcmt_id}
   	</delete>
   
   <!-- 사업자가 신고하는 리뷰  -->
   <insert id="reviewReport" parameterType="rvreportVo">
	   	insert into rvreport 
	   	values(SEQ_RVR.nextval,
	   			#{rvr_reason},
	   			sysdate,
	   			'rst',
   				#{rv_id})
   </insert>
   
   
   
   
   <!-- 태그리스트 불러오기 -->
   	<select id="getTag" resultType="tagVo">
   		select * from tag
   	</select>
	
	<!-- 회원가입-->
	<insert id="rstJoin" parameterType="restaurantVo">
		insert into 
		restaurant(
				RST_ID,	
				RST_NAME,
				RST_PASS,
				BS_NUM,	
				RST_TEL,
				RST_MAIL,
				RST_ADDR,
				CTG_ID,
				RST_REQ,
				RST_PHOTO
		)values(
			 #{rst_id},
			 #{rst_name},
			 #{rst_pass},
			 #{bs_num},
			 #{rst_tel},
			 #{rst_mail},
			 #{rst_addr},
			 #{ctg_id},
			 sysdate,
			 #{rst_photo}
		 )
	</insert>
	
	<!-- 아이디 유효성 체크 -->
	<select id="checkId" parameterType="String" resultType="int">
		select count(*) 
		from RESTAURANT
		where rst_id = #{data}
	</select>
	
	<!-- 카테고리 끌고오기 -->
	<select id="getCategory" resultType="categoryVo">
		select *
		from category
	</select>
	
	<!-- 
		======================================================== 위에 구현완료 된거
	 -->
	
	<!-- 승인 여부 확인  1이면 승인 안된거임 0이면 로그인완료-->
	<select id="rstAccept" resultType="int" parameterType="restaurantVo">
		select 
		count(*)
		from RESTAURANT
		where RST_ID = #{rst_id}
		and RST_PASS = #{rst_pass}
		and ACCEPT is null
	</select>
	
	
	<!-- 로그인 쿼리 -->
	<select id="rstLogin" resultType="restaurantVo" parameterType="restaurantVo">
		select *
		from RESTAURANT
		where RST_ID = #{rst_id}
		and RST_PASS = #{rst_pass}
	</select>
	
	<!-- 아이디 찾기 -->
	<select id="rstSearchId" parameterType="String" resultType="String">
		select RST_ID
		from RESTAURANT
		where RST_MAIL = #{data};
	</select>
	
	<!-- 비밀번호 찾기 -->
	<select id="rstSearchPass" resultType="String" parameterType="restaurantVo">
		select RST_Pass
		from RESTAURANT
		where RST_MAIL = #{rst_mail}
		and RST_ID = #{rst_id}
	</select>
	
	<!-- 비밀번호 변경 -->
	<update id="changePass" parameterType="String">
		update RESTAURANT
		set RST_PASS = #{data}
	</update>
	
	
		
    
    <!-- 메뉴 등록전 해야할일 -->
    
   
    
    <!-- 리뷰 조회 -->
    <select id="searchReview" parameterType="String" resultType="reviewVo">
    	select * 
    	from REVIEW
    	where RST_ID = #{data}
    </select>
    
    
    
    <!-- 댓글 달기 -->
    <insert id="insertComment" parameterType="rstcmtVo">
		insert into RSTCMT
		values (seq_rcmt.nextval,
				#{rcmt_content},
				#{rst_id},
				#{RV_ID})	  
    </insert>
    
    <!-- 예약 조회 -->
    <select id="searchReserv" parameterType="String" resultType="reservationVo">
	    select * 
	    from reservation 
	    where rs_id = #{rs_id}
    </select>
    
    <!-- 예약 전체 조회 -->
	<select id="searchAllReserv" parameterType="String" resultType="reservationVo">
	    select * 
	    from reservation 
	    where rst_id = #{rst_id}
    </select>

	<!-- 리뷰넘버로 멤버아이디 조회 -->
	<select id="idfromrv" parameterType="int" resultType="memberVo">
		select a.* from members a, review b where b.rv_id = #{data} and b.mem_id = a.mem_id
	</select>

	

</mapper>









